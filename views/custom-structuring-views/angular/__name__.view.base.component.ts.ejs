import { Component, Injector, ViewChild, OnInit, AfterViewInit, OnDestroy } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';

import { State } from '@progress/kendo-data-query';

import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';

import { KbGridComponent } from '../../../shared/components/grid/grid.component';
import { ModelDataResult } from '../../../core/data/model-data-result';

import { DataService } from '../../../core/data/data.service';
import { DataServiceFactory } from '../../../core/data/data-service-factory';

@Component({
    <% if (useTemplateUrl) { %>templateUrl: './<%- dasherizedViewName %>.view.component.html'<% } else { %>template: require('./<%- dasherizedViewName %>.view.component.html')<% } %>,
    styleUrls: ['./<%- dasherizedViewName %>.view.component.css']
})
export class <%- classifiedViewName %>ViewBaseComponent implements OnInit, AfterViewInit, OnDestroy {

    // Define the view title.
    public title: string = "<%- view.title.replace(/"/g, '\\"'); %>";

    // Define the 2 string props.
    public string1: string = "<%- view.string1.replace(/"/g, '\\"'); %>";
    public string2: string = "<%- view.string2.replace(/"/g, '\\"'); %>";

<%#
    $config will contain all view configuration properties, including the additional properties
    defined in config.json.ejs.
%>
    public $config: any = <%- viewConfig %>;

    constructor(public injector: Injector) {
    }

    public ngOnInit(): void {
        // Uncomment the debugger statement to inspect, at runtime, the properties defined above.
        //debugger;
    }

    public ngAfterViewInit(): void {
    }

    public ngOnDestroy(): void {
    }
}
